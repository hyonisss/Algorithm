## 프로그래머스 Hash(1)

#### 완주하지 못한 선수

* * *

<pre>
<code>

import java.util.*;
class Solution {
    public String solution(String[] participant, String[] completion) {
        String answer = "";
        HashMap<String, Integer> hash = new HashMap<String,Integer> (); //HashMap 객체생성
        for(String name : participant) hash.put(name, hash.getOrDefault(name,0)+1); // 만약 Key값이 A,B,C,A 인 경우, 데이터값은 A:2, B:1, C:1 이 저장됨
        for(String name : completion) hash.put(name, hash.get(name)-1); // A:1, B:0, C:0
     
    `   for(String key : hash.keySet()) {
            if(hash.get(key)!=0) 
            answer = key;      // answer = "A" 가 되는 것
        }
       return answer;
    }
}
</code>
</pre>

이 문제에서 가장 어려웠던 건 동명이인을 어떻게 처리할 것이냐 하는 부분 
그래서 코드도 조금 더 복잡해졌다 (복잡해진 부분은 주석 달아놓음)


* * *

학부시절 객체지향프로그래밍 수업자료 다시 열어서 제대로 공부해보았다.

* 기본적인 내용

HashMap은 여러개 통 만들어 두고 키 값을 이용하여 데이터가 담긴 통 번호를 찾는 계산 구조이다.


우선 import java.util.* 해주어야 하고

**객체 생성**

    HashMap<키, 데이터> 변수명 = new HashMap<키, 데이터>();

**데이터 넣기**

    hash.put(키값);

**데이터 삭제**

    hash.remove(키값);

**데이터 추출**

    hash.get(키값);

* * *

* 새로 알게된 내용

해당 키값에 저장된 데이터가 있으면 추출하고 아니면 디폴트값 반환하는 클래스

        hash.getOrDefault(키값, 디폴트값);
        
키값들의 집합을 리턴

    hash.keySet();

배열에 사용할 수 있는 for 문
participant라는 배열에 있는 String 형태의 자료들을 name이라는 변수에 일일히 저장시키는 반복문

    for(String name : participant)
    