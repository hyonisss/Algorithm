---
title: 프로그래머스-힙2(Java)
subtitle: 라면공장
date: 2020-03-08 03:16:41
tags: ["algorithm", "programmers", "java"]
---
## 프로그래머스 힙(2)
   

#### 라면공장
   
      

* * *
   
> 나의 풀이   
   
   
<pre>
<code>
import java.util.*;
class Solution {
    public int solution(int stock, int[] dates, int[] supplies, int k) {
        int answer = 0;
        int total_stock = stock; //공급받은 재고를 넣을 변수
        int index = 0; //사용한 i값 저장
        PriorityQueue<Integer> q = new PriorityQueue<Integer> (Comparator.reverseOrder()); //밀가루가 부족한 시점에 공급받을 수 있는 밀가루의 수량을 담을 MaxHeap
        while(total_stock < k) {      //공급받은 재고가 K보다 작을 경우
            for(int i=index; i<dates.length; i++) {
                if(dates[i]<=total_stock) { //공급이 부족한 시점에 추가로 공급받을 수 있는 시점들
                    q.add(supplies[i]); //그 시점에 해당하는 밀가루 수량들 모두 큐에 삽입
                    index = i+1; // 현재 공급받은 날짜 이후의 날짜만 다음번에 참조할거임
                }
            }
            total_stock += q.poll(); //공급받을 수 있는 밀가루 수량 중 가장 큰 것 공급받음
            answer++; 
        }       
        return answer;
    }
}
</code>
</pre>
* * *
   
      
    
* MaxHeap을 만드는 방법(우선순위 큐 사용)

        PriorityQueue q = new PriorityQueue (Comparator.reverseOrder());
        
이 문제에서 Heap이 왜 필요한지 알아차리는게 가장 어려웠다. 결국은 다른사람 풀이를 구글링해서 참조한 뒤 스스로 문제를 풀어보았다.
   
      
      
* 그렇다면, 이 문제에서 Heap이 필요한 구간은? 
   
   
밀가루가 부족해진 시점에, 내가 공급받을 수 있는 수량들을 다 우선순위 큐에 넣어놓고
그 중에 가장 큰 수량을 우선으로 공급받으면 총 공급횟수가 줄어들게 된다.


